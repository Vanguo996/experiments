apiVersion: v1                                        #必选，版本号，例如v1
kind: Pod                                             #必选，Pod
metadata:                                             #必选，元数据
  name: string                                        #必选，Pod名称
  namespace: string                                   #必选，Pod所属的命名空间
  labels:                                             #自定义标签
    name: string                                      #自定义标签名字
  annotations:                                        #自定义注释列表
    name: string
spec:                                                 #必选，Pod中容器的详细定
#container属性部分定义
  priorityClassName: string                           #优先级配置
  terminationGracePeriodSeconds: number               #发送SIGTERM信号后,延时多久关闭pod
  restartPolicy: [Always | Never | OnFailure]         #Pod的重启策略，Always表示一旦不管以何种方式终止运行，kubelet都将重启，OnFailure表示只有Pod以非0退出码退出才重启，Nerver表示不再重启该Pod
  dnsPolicy: [ClusterFirst | Default]                 #DNS策略,默认为ClusterFirst,Default:域名解析配置会从Pod所在节点继承,ClusterFirst:DNS查询会被发送到kube-dns服务
  nodeSelector:                                       #设置NodeSelector表示将该Pod调度到包含这个label的node上，以key：value的格式指定
    key: value
  imagePullSecrets:                                   #Pull镜像时使用的secret名称，以key：secretkey格式指定
    - name: string
  hostNetwork: false                                  #是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络
#初始化容器定义
  initContainers:
    - name: string
      image: string
      command: [string]
#容器定义
  containers:                                         #必选，Pod中容器列表
  - name: string                                      #必选，容器名称
    image: string                                     #必选，容器的镜像名称
    imagePullPolicy: [Always | Never | IfNotPresent]  #获取镜像的策略 Alawys表示下载镜像 IfnotPresent表示优先使用本地镜像，否则下载镜像，Nerver表示仅使用本地镜像
    command: [string]                                 #容器的启动命令列表，如不指定，使用打包时使用的启动命令
    args: [string]                                    #容器的启动命令参数列表
    workingDir: string                                #容器的工作目录
    volumeMounts:                                     #挂载到容器内部的存储卷配置
      - name: string                                  #引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名
        readOnly: boolean                             #是否为只读模式
        mountPath: string                             #存储卷在容器内mount的绝对路径，应少于512字符
    ports:                                            #需要暴露的端口库号列表
      - name: string                                  #端口号名称
        containerPort: number                         #容器需要监听的端口号
        hostPort: number                              #容器所在主机需要监听的端口号，默认与Container相同
        protocol: string                              #端口协议，支持TCP和UDP，默认TCP
    env:                                              #容器运行前需设置的环境变量列表
      - name: string                                  #环境变量名称
        value: string                                 #环境变量的值
      - name: string
        valueFrom:                                    #环境变量的值为秘密
          secretKeyRef:
            name: string                              #引用的环境变量名称
            key: string                               #值的键
      - name: string
        valueFrom:
          configMapKeyRef:                            ##环境变量的值为configMap
            key: string
            name: string
      - name: string                                  #DownwardAPIVolumeFiles 在容器内获取容器的一些指标
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName                  #可选值:spec.nodeName,metadata.name,metadata.namespace,status.podIP,spec.serviceAccountName
      - name: string                                  #对于资源的获取
        valueFrom:
          resourceFieldRef:
            containerName: string                     #pod中容器的名称
            resource: requests.cpu                    #资源,可选值:requests.cpu,limits.cpu,requests.memory,limits.memory
    resources:                                        #资源限制和请求的设置
      limits:                                         #资源限制的设置
        cpu: string                                   #Cpu的限制，单位为core数，将用于docker run --cpu-shares参数
        memory: string                                #内存限制，单位可以为Mib/Gib，将用于docker run --memory参数
      requests:                                       #资源请求的设置
        cpu: string                                   #Cpu请求，容器启动的初始可用数量
        memory: string                                #内存清楚，容器启动的初始可用数量
    livenessProbe:                                    #对Pod内个容器健康检查的设置，当探测无响应几次后将自动重启该容器，检查方法有exec、httpGet和tcpSocket，对一个容器只需设置其中一种方法即可
      initialDelaySeconds: number                     #容器启动完成后首次探测的时间，单位为秒
      timeoutSeconds: number                          #对容器健康检查探测等待响应的超时时间，单位秒，默认1秒
      periodSeconds: number                           #对容器监控检查的定期探测时间设置，单位秒，默认10秒一次
      successThreshold: number
      failureThreshold: number                        #默认容忍失败次数,默认1次
      exec:                                           #对Pod容器内检查方式设置为exec方式
        command: [string]                             #exec方式需要制定的命令或脚本
      httpGet:                                        #对Pod内个容器健康检查方法设置为HttpGet，需要制定Path、port
        path: string
        port: number
        host: string
        scheme: string
        httpHeaders:
          - name: string
            value: string
      tcpSocket:
        port: number
    readinessProbe:                                   #<同livenessProbe节点>
    securityContext:
      privileged: boolean                             #是否开启特权模式
# #存储卷定义
#   volumes:                                            #在该pod上定义共享存储卷列表
#     - name: string                                    #共享存储卷名称 （volumes类型有很多种）
#       emptyDir: {}                                    #类型为emtyDir的存储卷，与Pod同生命周期的一个临时目录。为空值
#       hostPath: string                                #类型为hostPath的存储卷，表示挂载Pod所在宿主机的目录
#         path: string                                  #Pod所在宿主机的目录，将被用于同期中mount的目录
#       secret:                                         #类型为secret的存储卷，挂载集群与定义的secre对象到容器内部
#         secretName: string
#         defaultMode: number                           #秘密文件权限,八进制
#         items:
#           - key: string
#             path: string
#             mode: nubmer                              #秘密文件权限,八进制
#       configMap:                                      #类型为configMap的存储卷，挂载预定义的configMap对象到容器内部
#         name: string
#         items:
#           - key: string
#             path: string